#!/usr/bin/env python3

from sqlalchemy import create_engine, text
import os
import sqlite3

def test_direct_sqlite():
    """–¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ sqlite3"""
    print("=== –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è sqlite3 ===")
    try:
        conn = sqlite3.connect('instance/app.db')
        cursor = conn.cursor()
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
        tables = cursor.fetchall()
        print(f"‚úÖ –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: {[table[0] for table in tables]}")
        conn.close()
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_sqlalchemy():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ SQLAlchemy"""
    print("\n=== –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è SQLAlchemy ===")
    database_url = "sqlite:///instance/app.db"
    print(f"URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {database_url}")
    print(f"–†–∞–±–æ—á–∏–π –∫–∞—Ç–∞–ª–æ–≥: {os.getcwd()}")

    try:
        engine = create_engine(database_url)
        connection = engine.connect()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        result = connection.execute(text("SELECT name FROM sqlite_master WHERE type='table';"))
        tables = [row[0] for row in result]
        print(f"‚úÖ SQLAlchemy –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: {tables}")

        connection.close()
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SQLAlchemy –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def check_file_permissions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"""
    print("\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ ===")

    db_path = "instance/app.db"
    if os.path.exists(db_path):
        stat = os.stat(db_path)
        print(f"‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {db_path}")
        print(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {stat.st_size} –±–∞–π—Ç")
        print(f"–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: {oct(stat.st_mode)[-3:]}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –Ω–∞ —á—Ç–µ–Ω–∏–µ/–∑–∞–ø–∏—Å—å
        readable = os.access(db_path, os.R_OK)
        writable = os.access(db_path, os.W_OK)
        print(f"–î–æ—Å—Ç—É–ø –Ω–∞ —á—Ç–µ–Ω–∏–µ: {'‚úÖ' if readable else '‚ùå'}")
        print(f"–î–æ—Å—Ç—É–ø –Ω–∞ –∑–∞–ø–∏—Å—å: {'‚úÖ' if writable else '‚ùå'}")

        return readable and writable
    else:
        print(f"‚ùå –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {db_path}")
        return False

if __name__ == "__main__":
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n")

    file_ok = check_file_permissions()
    sqlite_ok = test_direct_sqlite()
    sqlalchemy_ok = test_sqlalchemy()

    print(f"\n=== –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ===")
    print(f"–§–∞–π–ª –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: {'‚úÖ' if file_ok else '‚ùå'}")
    print(f"–ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ sqlite3: {'‚úÖ' if sqlite_ok else '‚ùå'}")
    print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ SQLAlchemy: {'‚úÖ' if sqlalchemy_ok else '‚ùå'}")

    if all([file_ok, sqlite_ok, sqlalchemy_ok]):
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.")