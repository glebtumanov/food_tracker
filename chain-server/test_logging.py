#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è API chain-server.
"""

import requests
import time
import json
from pathlib import Path


def test_api_logging():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ API endpoint'—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è."""
    base_url = "http://localhost:8000"

    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è API...")

    # 1. Health check
    print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º health check...")
    try:
        response = requests.get(f"{base_url}/health")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {'‚úÖ' if data['image_analyzer_ready'] else '‚ùå'}")
            print(f"   –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤: {'‚úÖ' if data['nutrients_analyzer_ready'] else '‚ùå'}")
    except requests.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

    # 2. –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ –Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤
    print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ –Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤...")
    try:
        nutrient_data = {
            "dish": "Oatmeal",
            "amount": 250,
            "unit": "–≥—Ä–∞–º–º"
        }
        response = requests.post(f"{base_url}/analyze-nutrients", json=nutrient_data)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            if "calories" in data:
                print(f"   –ö–∞–ª–æ—Ä–∏–∏: {data.get('calories', 0):.1f} –∫–∫–∞–ª")
                print(f"   –ë–µ–ª–∫–∏: {data.get('protein', 0):.1f} –≥")
            else:
                print(f"   –û—à–∏–±–∫–∞: {data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
    except requests.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

    # 3. –¢–µ—Å—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ endpoint'–∞
    print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π endpoint...")
    try:
        response = requests.get(f"{base_url}/nonexistent")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    except requests.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

    # 4. –¢–µ—Å—Ç —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    try:
        response = requests.post(f"{base_url}/analyze-nutrients", json={})
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code != 200:
            data = response.json()
            print(f"   –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞: {data.get('detail', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
    except requests.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ —Ñ–∞–π–ª–µ: logs/api_requests.log")
    print("   –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: tail -f logs/api_requests.log")


def check_log_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ª–æ–≥-—Ñ–∞–π–ª–∞."""
    log_file = Path("logs/api_requests.log")

    if log_file.exists():
        print(f"\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ {log_file}:")
        print("-" * 80)
        with open(log_file, 'r', encoding='utf-8') as f:
            lines = f.readlines()
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫
            for line in lines[-10:]:
                print(f"   {line.strip()}")
        print("-" * 80)
    else:
        print(f"\n‚ùå –õ–æ–≥-—Ñ–∞–π–ª {log_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")


if __name__ == "__main__":
    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ–ª –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    print("‚è±Ô∏è  –û–∂–∏–¥–∞–Ω–∏–µ 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    time.sleep(2)

    test_api_logging()
    check_log_file()